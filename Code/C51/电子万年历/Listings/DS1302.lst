C51 COMPILER V9.60.0.0   DS1302                                                            06/29/2022 01:29:58 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE DS1302
OBJECT MODULE PLACED IN .\Objects\DS1302.obj
COMPILER INVOKED BY: D:\KeilMDKArm\C51\BIN\C51.EXE Hardware\DS1302.c OMF2 OPTIMIZE(8,SPEED) BROWSE DEBUG PRINT(.\Listing
                    -s\DS1302.lst) TABS(2) OBJECT(.\Objects\DS1302.obj)

line level    source

   1          #include ".\Library\STC15F.H"
   2          
   3          sbit DS1302_SCLK = P2^4;
   4          sbit DS1302_IO = P2^3;
   5          sbit DS1302_CE = P2^2;
   6          //定义地址，分别是秒，分钟
   7          #define DS1302_SECOND     0x80  //秒
   8          #define DS1302_MINUTE     0x82  //分钟
   9          #define DS1302_HOUR       0x84  //小时  
  10          #define DS1302_DATE       0x86  //日
  11          #define DS1302_MONTH      0x88  //月
  12          #define DS1302_DAY        0x8A  //星期
  13          #define DS1302_YEAR       0x8C  //年
  14          #define DS1302_WP         0x8E  //写保护
  15          
  16          unsigned char DS1302_Time[7]={22,1,16,23,18,0,7};   //设置当前时间
  17          
  18          /**
  19            * @brief  初始化
  20            * @param  无
  21            * @retval  无！！
  22            */
  23          void DS1302_Init(void)
  24          {
  25   1        DS1302_CE = 0;
  26   1        DS1302_SCLK = 0;
  27   1      }
  28          /**
  29            * @brief  写入数据
  30            * @param  写入的命令
  31            * @param  写入的数据
  32            * @retval  无
  33            */
  34          void DS1302_WriteByte(unsigned char Command, Data)
  35          {
  36   1        unsigned char i;
  37   1        DS1302_CE = 1;
  38   1        
  39   1        for (i = 0;i < 8; i++)
  40   1        {
  41   2          DS1302_IO = Command&(0x01<<i);
  42   2          DS1302_SCLK = 1;
  43   2        //  Delay(); 51太慢不用
  44   2          DS1302_SCLK = 0;
  45   2        }
  46   1        
  47   1        for (i = 0;i < 8; i++)
  48   1        {
  49   2          DS1302_IO = Data&(0x01<<i);
  50   2          DS1302_SCLK = 1;
  51   2          //  Delay(); 51太慢不用
  52   2          DS1302_SCLK = 0;
  53   2        }
  54   1        DS1302_CE = 0;
C51 COMPILER V9.60.0.0   DS1302                                                            06/29/2022 01:29:58 PAGE 2   

  55   1      }
  56          
  57          /**
  58            * @brief  读取数据
  59            * @param  写入命令
  60            * @retval 读出的数据
  61            */
  62          unsigned char DS1302_ReadByte(unsigned char Command)  
  63          {
  64   1        unsigned char i,Data = 0x00;
  65   1        Command |=0x01;
  66   1        DS1302_CE = 1;
  67   1        
  68   1        for (i = 0;i < 8; i++)
  69   1        {
  70   2          DS1302_IO = Command&(0x01<<i);
  71   2          DS1302_SCLK = 0;
  72   2          //  Delay(); 51太慢不用
  73   2          DS1302_SCLK = 1;
  74   2          
  75   2        }
  76   1        for(i=0;i<8;i++)
  77   1        {
  78   2          DS1302_SCLK = 1;
  79   2          //  Delay(); 51太慢不用
  80   2          DS1302_SCLK = 0;
  81   2          if(DS1302_IO)
  82   2          {
  83   3            Data |= (0x01<<i) ;
  84   3          }
  85   2        }
  86   1        DS1302_CE = 0;
  87   1        DS1302_IO = 0;
  88   1        return Data;
  89   1      }
  90          
  91          /**
  92            * @brief  向ds1302设置时间，DS1302_Time数组已定义
  93            * @param  无
  94            * @retval  无
  95            */
  96          void DS1302_SetTime()
  97          {
  98   1        DS1302_WriteByte(DS1302_WP,0x00);
  99   1        DS1302_WriteByte(DS1302_YEAR,DS1302_Time[0]/10*16+DS1302_Time[0]%10);
 100   1        DS1302_WriteByte(DS1302_MONTH,DS1302_Time[1]/10*16+DS1302_Time[1]%10);
 101   1        DS1302_WriteByte(DS1302_DATE,DS1302_Time[2]/10*16+DS1302_Time[2]%10);
 102   1        DS1302_WriteByte(DS1302_HOUR,DS1302_Time[3]/10*16+DS1302_Time[3]%10);
 103   1        DS1302_WriteByte(DS1302_MINUTE,DS1302_Time[4]/10*16+DS1302_Time[4]%10);
 104   1        DS1302_WriteByte(DS1302_SECOND,DS1302_Time[5]/10*16+DS1302_Time[5]%10);
 105   1        DS1302_WriteByte(DS1302_DAY,DS1302_Time[6]/10*16+DS1302_Time[6]%10);
 106   1        DS1302_WriteByte(DS1302_WP,0x80);
 107   1      }
 108          
 109          /**
 110            * @brief  读取ds1302的时间
 111            * @param  无
 112            * @retval  无
 113            */
 114          void DS1302_ReadTime()
 115          {
 116   1        unsigned char Temp;
C51 COMPILER V9.60.0.0   DS1302                                                            06/29/2022 01:29:58 PAGE 3   

 117   1        Temp = DS1302_ReadByte(DS1302_YEAR);
 118   1        DS1302_Time[0] = Temp/16*10+Temp%16;
 119   1        Temp = DS1302_ReadByte(DS1302_MONTH);
 120   1        DS1302_Time[1] = Temp/16*10+Temp%16;
 121   1        Temp = DS1302_ReadByte(DS1302_DATE);
 122   1        DS1302_Time[2] = Temp/16*10+Temp%16;
 123   1        Temp = DS1302_ReadByte(DS1302_HOUR);
 124   1        DS1302_Time[3] = Temp/16*10+Temp%16;
 125   1        Temp = DS1302_ReadByte(DS1302_MINUTE);
 126   1        DS1302_Time[4] = Temp/16*10+Temp%16;
 127   1        Temp = DS1302_ReadByte(DS1302_SECOND);
 128   1        DS1302_Time[5] = Temp/16*10+Temp%16;
 129   1        Temp = DS1302_ReadByte(DS1302_DAY);
 130   1        DS1302_Time[6] = Temp/16*10+Temp%16;
 131   1      
 132   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    587    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      7       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
